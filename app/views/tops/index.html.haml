.topPage
  .listWrapper
    - @lists.each do |list|
      .list
        .list_header
          %h2.list_header_title= list.title
          .list_header_action
            = link_to content_tag(:i, '', class: 'fas fa-trash'), list, method: :delete, data: { confirm: "#{list.title}を削除して大丈夫ですか？" }
            = link_to(content_tag(:i, '', class: 'fas fa-pen'), edit_list_path(list))
        .cardWrapper
          - list.cards.each do |card|
            = link_to list_card_path(list, card), class:"cardDetail_link" do
              .card
                %h3.card_title= card.title
                - if card.memo.size > 0
                  .card_detail.is-exist
                    %i.fas.fa-bars
                    %i.fas.fa-stopwatch#stopwatch
          .addCard
            %i.far.fa-plus-square
            = link_to "さらにカードを追加", new_list_card_path(list), class: "addCard_link"

%p いまから
%span#timer 以内に注文すると50%OFF


:javascript
  const countdown = (due) => {
    const now = new Date();

    const rest = due.getTime() - now.getTime();
    const sec = Math.floor(rest / 1000 ) % 60;
    const min = Math.floor(rest / 1000 / 60 ) % 60;
    const hours = Math.floor(rest / 1000 / 60 / 60 ) % 24;
    const days = Math.floor(rest / 1000 / 60 / 60 / 24) % 60;
    const count = [days, hours, min, sec];

    return count;
  }
  
  let goal = new Date();
  goal.setHours(23);
  goal.setMinutes(59);
  goal.setSeconds(59);

  const recalc = () => {
    const counter = countdown(goal);
    const time = `${counter[1]}時間${counter[2]}分${counter[3]}秒`;
    document.getElementById("timer").textContent = time;
    refresh();
  }
    
  const refresh = () => {
    setTimeout(recalc, 1000);
  }

  recalc();